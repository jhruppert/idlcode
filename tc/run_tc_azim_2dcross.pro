; 
; Plot 2d cross section (i.e., var vs x) from azimuthally averaged TC output (generated by run_calc_azim.pro).
;
; James Ruppert
; 4/22/20
; 
pro run_tc_azim_2dcross

tcname='maria'
;tcname='haiyan'

if tcname eq 'maria' then begin
  tcyear='2017'
  hurdat=read_hurdat(tcname,tcyear)
endif else if tcname eq 'haiyan' then begin
  tcyear='2013'
  hurdat=read_jtwcdat(tcname)
endif

;subdir='moving_nest/'+tcname
subdir='static_nest/'+tcname
subdir='redux/'+tcname
tc_sim_config, subdir, dirs=dirs, dims=dims, vars=vars;, /verbose
dirs.figdir+=tcname+'/'

;PLOT TIME BOUNDS (average over this period)
  if tcname eq 'maria' then begin
    d0=18
    d1=18.5
  endif
  if tcname eq 'haiyan' then begin
    d0=18
    d1=18.5
  endif

;CALCULATE HOUR INDICES
  if tcname eq 'maria' then dd0=14.5
  if tcname eq 'haiyan' then dd0=1
  hr_plot=round(([d0,d1]-dd0)*24)

  hr_tag_check=string(hr_plot[0],format='(i3.3)')+'-'+string(hr_plot[1],format='(i3.3)')+'hr'
  print,'Plotting: ',hr_tag_check

;EXTRA TIME SPECS
  nt_full=dims.nt-1
  if strmatch(subdir,'redux*') and tcname eq 'maria' then nt_full=145
  if strmatch(subdir,'redux*') and tcname eq 'haiyan' then nt_full=169
  npd=dims.npd
  nhrs=1.*nt_full*npd/24.
  nd=(1.*nhrs-(nhrs mod 24))/24.
  time_hrs=indgen(nhrs)

;AZIM FILES
  hr_sel=[24,120]
  if tcname eq 'haiyan' then hr_sel=[24,144]
  if strmatch(subdir,'redux*') then begin
    if tcname eq 'maria'  then hr_sel=[0,144]
    if tcname eq 'haiyan' then hr_sel=[0,168]
  endif
  t_ind=where((time_hrs ge hr_sel[0]) and (time_hrs le hr_sel[1]))
  t_ind=t_ind[where(t_ind le nt_full-1)]
  nt_sav=n_elements(t_ind)

;----PLOT OPTIONS--------------------

ismooth=1 ; smooth time series?

radius_range=[300,500];800] ; max is 800 km
radius_range=[0,600];800];200]

var1_str='RTHRATLW'
;var1_str='RTHRATTOT'
;var1_str='RTHRATSW'
;var1_str='W'
;var1_str='T'
;var1_str='AVOR'
;var1_str='H_DIABATIC'
;var1_str='rainrate'
;var1_str='CWV'
;var1_str='RH';'QVAPOR';
;var1_str='SLP'
;var1_str='shear'
;var1_str='SEF'
;var1_str='wind'
  wvar='v_tan'
;  wvar='u_rad'
;  wvar='wspd'


;----READ VARS--------------------


;AZIMUTHAL SPECS
  nrad=267
  naz=360
  if tcname eq 'haiyan' or strmatch(subdir,'redux*') then nrad=433

print,'VAR: ',var1_str

;for ic=0,dirs.nc-1 do begin
for ic=0,0 do begin
;for ic=1,dirs.nc-1 do begin

  print,'CASE: ',strupcase(dirs.cases[ic])

  hr0=0
  if strmatch(dirs.cases[ic],'*36h*') then hr0=36
  if strmatch(dirs.cases[ic],'*24h*') then hr0=24
  if strmatch(dirs.cases[ic],'*48h*') then hr0=48
  if strmatch(dirs.cases[ic],'*60h*') then hr0=60
  if strmatch(dirs.cases[ic],'*72h*') then hr0=72
  if strmatch(dirs.cases[ic],'*84h*') then hr0=84
  if strmatch(dirs.cases[ic],'*96h*') then hr0=96
  if strmatch(dirs.cases[ic],'lwcrf2*') then hr0=36
  if strmatch(dirs.cases[ic],'lwcrf*') then hr0=36
  if strmatch(dirs.cases[ic],'axisym') then hr0=36
  nt_test_full=nt_full - hr0

;if strmatch(subdir,'redux*') then begin
;
;  if total(strmatch(['lwcrf','axisym'],dirs.cases[ic])) then begin
;;    hr_fil='49-72hr'
;;    nt_test=24
;    hr0='36'
;    nt_test=hr_sel[1]-fix(hr0)+1
;    hr_fil=hr0+'-'+strtrim(hr_sel[1],2)+'hr'
;  endif else if strmatch(dirs.cases[ic],'*ncrf_*') then begin
;    hr0=strmid(dirs.cases[ic],2,2,/reverse_offset)
;    nt_test=hr_sel[1]-fix(hr0)+1
;    hr_fil=hr0+'-'+strtrim(hr_sel[1],2)+'hr'
;  endif else begin
;  ;CTL
;    ;REDUX
;  if tcname eq 'maria' then begin
;    hr_fil='0-144hr'
;;    hr_tag_plot='049-096hr'
;    nt_test=145
;;    t_ind_plot=indgen(nt_plot)+(fix(strmid(hr_tag_plot,0,3)) - fix(strmid(hr_fil,0,2)))
;  endif else begin
;    hr_fil='0-168hr'
;    nt_test=169
;  endelse
;  endelse
;
;  t_ind_final=indgen(nt_test)+hr0
;
;endif else begin

  ;TIME SELECTION
    t_offset=max([0,hr0-hr_sel[0]])
    ut_offset=max([0,hr_sel[0]-hr0])
    nt_test=nt_sav-t_offset
    t_ind_test=indgen(nt_test)+ut_offset
    hrs_test=time_hrs[t_ind_test+hr0]
    hr_fil=strtrim(hrs_test[0],2)+'-'+strtrim(hrs_test[nt_test-1],2)+'hr'
    t_ind_plot=where(hrs_test ge hr_plot[0] and hrs_test le hr_plot[1],nt_plot)
    t_ind_final=indgen(nt_test)+hr0
    hrs_plot=hrs_test[t_ind_plot]
    hr_tag_plot=string(hrs_plot[0],format='(i3.3)')+'-'+string(hrs_plot[nt_plot-1],format='(i3.3)')+'hr'

  if hr_tag_plot ne hr_tag_check then begin
    print,'Not enough times in test, so skipping...'
    continue
  endif

;endelse

  it0 = t_ind_plot[0]

  ;READ STORM MOTION (CALCULATED IN RUN_WRF_TC_TRACKS)
    motion_file=dirs.casedir[ic]+'storm_motion.txt'
    openr,1,motion_file
      readf,1,tmp_nt
      tmp_it_test=intarr(tmp_nt)
      readf,1,tmp_it_test
      motion_x=fltarr(tmp_nt) & motion_y=motion_x
      readf,1,motion_x
      readf,1,motion_y
    close,1

  ;2D VARS

    count=[nrad,naz,1,nt_plot] & offset=[0,0,0,it0] ; x,y,z,t

  ;SLP
    file=dirs.casedir[ic]+'azim_SLP_'+hr_fil+'.nc'
    slp=reform(read_nc_var(file,'SLP',count=count,offset=offset))
  ;OLR
;    file=dirs.casedir[ic]+'azim_OLR_'+hr_fil+'.nc'
;    olr=reform(read_nc_var(file,'OLR',count=count,offset=offset))
  ;OLRC
;    file=dirs.casedir[ic]+'azim_OLRC_'+hr_fil+'.nc'
;    olrc=reform(read_nc_var(file,'OLRC',count=count,offset=offset))

  radius=read_nc_var(file,'radius')
  azimuth=read_nc_var(file,'azmiuth')

  ;RMW
    file=dirs.casedir[ic]+'azim_U10_'+hr_fil+'.nc'
    u=reform(read_nc_var(file,'U10',count=[nrad,naz,1,nt_plot],offset=[0,0,0,it0]))
    file=dirs.casedir[ic]+'azim_V10_'+hr_fil+'.nc'
    v=reform(read_nc_var(file,'V10',count=[nrad,naz,1,nt_plot],offset=[0,0,0,it0]))
;       ;WINDS ALOFT
;      psel=850;950;850;925 ; hPa
;      iz=where(dims.pres eq psel)
;      file=dirs.casedir[ic]+'azim_U_'+hr_fil+'.nc'
;      u=reform(read_nc_var(file,'U',count=[nrad,naz,1,nt_plot],offset=[0,0,iz,it0]))
;      file=dirs.casedir[ic]+'azim_V_'+hr_fil+'.nc'
;      v=reform(read_nc_var(file,'V',count=[nrad,naz,1,nt_plot],offset=[0,0,iz,it0]))
    ;SUBTRACT STORM MOTION
    for it=0,nt_plot-1 do begin
      u[*,*,it] -= motion_x[it+it0];+hr_plot0[0]]
      v[*,*,it] -= motion_y[it+it0];+hr_plot0[0]]
    endfor
    wnd_azim=azim_wind_conv(u,v,azimuth) & u=0 & v=0
    vtan=wnd_azim.v_tan
    vtan=mean(temporary(vtan),dimension=2,/nan,/double)
    rmw=fltarr(nt_plot)
    for it=0,nt_plot-1 do begin
      max=max(reform(vtan[*,it]),loc,/nan)
      rmw[it]=radius[loc]
    endfor
    if ismooth then begin
      ntsmooth=1 ; = n * 1 hr
      rmw=gauss_smooth(temporary(rmw),ntsmooth,/edge_truncate)
    endif

  ;DP FOR VERTICAL INTEGRATION
    dp=fltarr(nrad,naz,dims.np,nt_plot)
    idp=deriv(dims.pres)
    idp*=-1e2
    for iz=0,dims.np-1 do dp[*,*,iz,*]=idp[iz]

  ;READ VARS

    count2d=[nrad,naz,1,nt_plot] & offset=[0,0,0,it0] ; x,y,z,t
    count=[nrad,naz,dims.np,nt_plot]

    ;SEF = SURFACE ENTHALPY FLUX

      file=dirs.casedir[ic]+'azim_HFX_'+hr_fil+'.nc'
      sh=reform(read_nc_var(file,'HFX',count=count2d,offset=offset)) ; W/m2
      file=dirs.casedir[ic]+'azim_LH_'+hr_fil+'.nc'
      lh=reform(read_nc_var(file,'LH',count=count2d,offset=offset)) ; W/m2

      sef=lh+sh

    ;RADIATION

      file=dirs.casedir[ic]+'azim_RTHRATLW_'+hr_fil+'.nc'
      lw=read_nc_var(file,'RTHRATLW',count=count,offset=offset)*1004. ; K/s --> J/kg/s
      file=dirs.casedir[ic]+'azim_RTHRATSW_'+hr_fil+'.nc'
;      sw=read_nc_var(file,'RTHRATSW',count=count,offset=offset)*1004.

;      file=dirs.casedir[ic]+'azim_RTHRATLWC_'+hr_fil+'.nc'
;      lwc=read_nc_var(file,'RTHRATLWC',count=count,offset=offset)*1004.
;      file=dirs.casedir[ic]+'azim_RTHRATSWC_'+hr_fil+'.nc'
;      swc=read_nc_var(file,'RTHRATSWC',count=count,offset=offset)*1004.

;      radtot=lw+sw

      ;REMOVE BELOW-GROUND POINTS
        for ip=0,dims.np-1 do begin
          nan=where(slp lt dims.pres[ip],count)
          iv=reform(lw[*,ip,*])
          if count gt 0 then iv[nan]=!values.f_nan
          lw[*,ip,*]=iv
        endfor

      ;VERTICALLY INTEGRATE
        ip = where(dims.pres ge 50)
        sum = (1./9.81) * total( lw[*,*,ip,*] * dp[*,*,ip,*]  ,3,/nan,/double)
        lw=sum & sum=0

    ;WIND

      file=dirs.casedir[ic]+'azim_U10_'+hr_fil+'.nc'
      u=reform(read_nc_var(file,'U10',count=count2d,offset=offset))
      file=dirs.casedir[ic]+'azim_V10_'+hr_fil+'.nc'
      v=reform(read_nc_var(file,'V10',count=count2d,offset=offset))

;      psel=850;950;850;925 ; hPa
;      iz=where(dims.pres eq psel)
;
;      file=dirs.casedir[ic]+'azim_U_'+hr_fil+'.nc'
;      u=reform(read_nc_var(file,'U',count=count2d,offset=offset))
;      file=dirs.casedir[ic]+'azim_V_'+hr_fil+'.nc'
;      v=reform(read_nc_var(file,'V',count=count2d,offset=offset))

      ;SUBTRACT STORM MOTION
      for it=0,nt_plot-1 do begin
        u[*,*,it] -= motion_x[it+it0];+hr_plot0[0]]
        v[*,*,it] -= motion_y[it+it0];+hr_plot0[0]]
      endfor

      wnd_azim=azim_wind_conv(u,v,azimuth)

      vtan=wnd_azim.v_tan
;      urad=wnd_azim.u_rad
;      wspd=sqrt(u^2+v^2)

      u=0 & v=0

  ;AZIMUTHALLY AVERAGE
    slp=mean(temporary(slp),dimension=2,/nan,/double)
;    olr=mean(temporary(olr),dimension=2,/nan,/double)
;    olrc=mean(temporary(olrc),dimension=2,/nan,/double)
    sef=mean(temporary(sef),dimension=2,/nan,/double)
    lw=mean(temporary(lw),dimension=2,/nan,/double)
    vtan=mean(temporary(vtan),dimension=2,/nan,/double)

  ;REMOVE AZIMUTHAL MEAN FOR SEF AND RAD
    totrad=total(radius,/double,/nan)
    for it=0,nt_plot-1 do begin
      imean=total(reform(sef[*,it])*radius,/nan,/double)/totrad
      sef[*,it]-=imean
      imean=total(reform(lw[*,it])*radius,/nan,/double)/totrad
      lw[*,it]-=imean
    endfor

  ;AVERAGE IN TIME
    slp=mean(temporary(slp),dimension=2,/nan,/double)
    sef=mean(temporary(sef),dimension=2,/nan,/double)
    lw=mean(temporary(lw),dimension=2,/nan,/double)
    vtan=mean(temporary(vtan),dimension=2,/nan,/double)


;----PROCESS VAR--------------------

;if ismooth then begin
;  nrsmooth=1 ; = n * 3km
;  ntsmooth=6;1 ; = n * 1 hr
;  var1=gauss_smooth(var1,[nrsmooth,ntsmooth],/edge_truncate)
;endif

;----CREATE PLOT--------------------


  figdir=dirs.figdir
  figname=figdir+'azim_2d/cross2d_'+strlowcase(dirs.cases[ic])+'_'+hr_tag_plot

  ;PLOT SPECS
    csize=0.8
    position=[0.21,0.19,0.82,0.95]
    xsize=3.0 & ysize=1.2
;    xtitle='Time [ hr ]'
    ytitle='!8V!X [ m s!U-1!N ]'
    yrange=[0,20]
    ytitle2='!8F!X [ W m!U-2!N ]'
    yrange2=[0,200]
    xtitle='Radius [ km ]'

  ;AXES
    y=vtan
    x=radius
    xrange=radius_range
    if ~keyword_set(xrange) then $
      xrange=[min(x),max(x)]
    if ~keyword_set(yrange) then $
      yrange=[min(y),max(y)]

  set_plot,'ps'
  epsname=figname+'.eps'
  !p.font=0
  device,filename=epsname,/encapsulated,/color,bits=8,xsize=xsize,ysize=ysize,/inches,$
    /helvetica

  loadct,0,/silent

  plot,x,y,/nodata,position=position,$
    xstyle=9,ystyle=9,$
    xrange=xrange,xminor=2,yrange=yrange,yminor=4,$
    xtitle=xtitle,ytitle=ytitle,$
    charsize=csize,$
    title=title

  loadct,0,/silent

  oplot,x,vtan,thick=4,linestyle=0,color=0

  axis,yaxis=1,ystyle=9,charsize=csize,yrange=yrange2,/noerase,/save

  loadct,39,/silent,file=dirs.ctfil

  oplot,x,lw,thick=2,linestyle=0,color=80
  oplot,x,sef,thick=2,linestyle=2,color=150

  device,/close

  convert_png,figname,res=400,/remove_eps


endfor ; icase

print,'DONE!!'
end
