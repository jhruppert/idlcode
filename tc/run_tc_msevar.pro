; 
; MSE variance budget from WRF TC output (uses post files generated by NCL routines).
;
; James Ruppert
; 3/5/2020
; 
pro run_tc_msevar

tcname='maria';'haiyan';'edouard';
;tcname='haiyan'
tcyear='2017';'2013'
;tcyear='2013'
if tcname eq 'haiyan' then $
  hurdat=read_jtwcdat(tcname) $
else $
  hurdat=read_hurdat(tcname,tcyear)

;subdir='moving_nest/'+tcname
;subdir='static_nest/'+tcname
subdir='redux/'+tcname
tc_sim_config, subdir, dirs=dirs, dims=dims, vars=vars;, /verbose
dirs.figdir+=tcname+'/'


;TIME SPECS
  time=dims.time
  nt_full=dims.nt;-1
  npd=dims.npd
  nhrs=1.*nt_full*npd/24.
  nd=(1.*nhrs-(nhrs mod 24))/24.
  time_hrs=indgen(nhrs)


;----PLOT OPTIONS--------------------


;RADIUS SUBSAMPLE
;  radius_max=800;1000 ; km


;----CONSTANTS--------------------

  ;CONSTANTS
    g=9.81 ; m/s2
    cp=1004. ; J/K/kg
    rgas=287. ; J/kg

;----READ VARS--------------------


;VORTEX LEVEL
  psel=700 ; (hPa) level to locate vortex
  izsel=(where(dims.pres eq psel))[0]

;LAND MASK
  vtag='LANDMASK'
  file=dirs.files_raw[0,2,0]
  mask=reform(read_nc_var(file,'LANDMASK'))
  land=where(mask eq 1,nland)
;  mask=0


;for ic=0,dirs.nc-1 do begin
;for ic=0,dirs.nc-1,2 do begin
for ic=0,0 do begin

  print,'CASE: ',strupcase(dirs.cases[ic])

  hr0=0
;  if strmatch(dirs.cases[ic],'*36h*') then hr0=49;36
  if strmatch(dirs.cases[ic],'*24h*') then hr0=24
  if strmatch(dirs.cases[ic],'*48h*') then hr0=48
  if strmatch(dirs.cases[ic],'*60h*') then hr0=60
  if strmatch(dirs.cases[ic],'*72h*') then hr0=72
  if strmatch(dirs.cases[ic],'*84h*') then hr0=84
  if strmatch(dirs.cases[ic],'*96h*') then hr0=96
  if strmatch(dirs.cases[ic],'lwcrf*') then hr0=36
;  if strmatch(dirs.cases[ic],'axisym') then hr0=49;36

  nttest=nt_full-hr0
  it_test=indgen(nttest)+hr0

  msefil=dirs.casedir[ic]+'post/MSE.nc'

  imask=fltarr(dims.nx,dims.ny,nttest)
  for it=0,nttest-1 do imask[*,*,it]=mask
  land=where(imask eq 1,nland)

  ;TC TRACK
      ;READ ABSOLUTE VORTICITY
        iv=where(vars.vars eq 'AVOR')
        file=dirs.files_post[ic,iv]
        count=[dims.nx,dims.ny,1,nttest] & offset=[0,0,izsel,0] ; x,y,z,t
        avor=reform(read_nc_var(file,'AVOR',count=count,offset=offset))
      specs=size(avor,/dimensions)
      ;SMOOTH
        ixsmooth=round(111./3) ; 1-degree smoothing, run twice
        ismooth=[ixsmooth,ixsmooth,0]
        for i=1,2 do $
          avor=smooth(temporary(avor),ismooth,/edge_truncate,/nan)
      ;MASKING
        if nland gt 0 then avor[land]=!values.f_nan
        if tcname eq 'maria' then avor=wrf_maria_mask(temporary(avor),time[it_test],hurdat,dims)
        if tcname eq 'haiyan' then avor=wrf_haiyan_mask(temporary(avor),time[it_test],hurdat,dims)
      ;VORTEX TRACKING
        vloc=maria_vortex_locate(avor,dims)
      ;SMOOTH TRACKS
        for i=0,1 do $
          vloc=smooth(temporary(vloc),[0,3],/edge_truncate,/nan)
;for i=0,nttest-1 do print,i,' ',vloc[*,i]
;exit

  ;2D VARS

    count=[dims.nx,dims.ny,1,nttest] & offset=[0,0,0,hr0] ; x,y,z,t

    print,'Reading 2D vars'

    ;SLP
;      ifil=where(strmatch(dirs.files_post[ic,*],'*SLP*'))
;      slp=reform(read_nc_var(dirs.files_post[ic,ifil],'SLP',count=count,offset=offset))

    ;LH
      ifil=where(strmatch(dirs.files_post[ic,*],'*LH*'))
      lh=reform(read_nc_var(dirs.files_post[ic,ifil],'LH',count=count,offset=offset))
;      lh[land]=!values.f_nan
  
    ;SH
      ifil=where(strmatch(dirs.files_post[ic,*],'*HFX*'))
      sh=reform(read_nc_var(dirs.files_post[ic,ifil],'HFX',count=count,offset=offset))
;      sh[land]=!values.f_nan

    ;VERTICALL INTEGRATED MSE BUDGET TERMS

    count=[dims.nx,dims.ny,nttest] & offset=[0,0,hr0] ; x,y,z,t

    ;MSE (J/m2)
      mse=reform(read_nc_var(msefil,'MSEINT',count=count,offset=offset))
;      mse[land]=!values.f_nan

    ;Longwave (W/m2)
      netlw=reform(read_nc_var(msefil,'LW_INT',count=count,offset=offset))
;      netlw[land]=!values.f_nan

    ;Shortwave (W/m2)
      netsw=reform(read_nc_var(msefil,'SW_INT',count=count,offset=offset))
;      netsw[land]=!values.f_nan

;    ;NET LW SFC (source to atmosphere)
;      ifil=where(strmatch(dirs.files_post[ic,*],'*GLW.*'))
;      lwsfc=reform(read_nc_var(dirs.files_post[ic,ifil],'GLW',count=count,offset=offset))
;    ;NET LW TOA (sink to atmosphere)
;      ifil=where(strmatch(dirs.files_post[ic,*],'*OLR.*'))
;      lwtoa=reform(read_nc_var(dirs.files_post[ic,ifil],'OLR',count=count,offset=offset))

;    ;NET SW SFC (sink to atmosphere)
;      ifil=where(strmatch(dirs.files_post[ic,*],'*GSW.*'))
;      swsfc=reform(read_nc_var(dirs.files_post[ic,ifil],'GSW',count=count,offset=offset))
;    ;NET SW TOA (source to atmosphere)
;      ifil=where(strmatch(dirs.files_post[ic,*],'*SWTOA*'))
;      swtoa=reform(read_nc_var(dirs.files_post[ic,ifil],'SWTOA',count=count,offset=offset))


  ;3D VARS

;    count=[dims.nx,dims.ny,dims.np,nttest] & offset=[0,0,0,hr0] ; x,y,z,t
;
;    ;MSE
;      print,'Reading 3D MSE'
;      mse3d=reform(read_nc_var(msefil,'MSE',count=count,offset=offset))
;  
;
;print,'In below-ground loop'
;  ;REMOVE BELOW-GROUND POINTS
;  for ip=10,dims.np-1 do begin
;    for it=0,nttest-1 do begin
;      nan=where(reform(slp[*,*,it]) lt dims.pres[ip],count)
;      if count gt 0 then begin
;        iv=reform(mse3d[*,*,ip,it])
;        iv[nan]=!values.f_nan
;        mse3d[*,*,ip,it]=iv
;      endif
;    endfor
;  endfor


;----RADIUS SUBSETTING--------------------


;xx NOW JUST REMOVING LAND (ABOVE) AND POINTS OUTSIDE SELECT BOUNDS
;NOW MOVING 10ยบ BOX AT CONSTANT PHASE SPEED

;BUDGET WILL ONLY BE MEANINGFUL FOR ~36-100H

  box_size=5.;10. ; box size (degrees)

  ix0=-53.14+7.76
  cx=(-61.81+53.14)/(144.-68)
  dx=box_size

  iy0=8.8
  cy=(16.3-8.8)/144.
  dy=box_size

print,'Domain subsetting'

  for it=0,nttest-1 do begin

;    keepx=where((dims.lon gt ix0+cx*it-dx/2) and (dims.lon le ix0+cx*it+dx/2),complement=nanx)
;    keepy=where((dims.lat lt iy0+cy*it+dy/2) and (dims.lat ge iy0+cy*it-dy/2),complement=nany)

    loc=reform(vloc[*,it])
    keepx=where((dims.lon gt loc[0]-dx*0.5) and (dims.lon le loc[0]+dx*0.5),complement=nanx)
    keepy=where((dims.lat lt loc[1]+dy*0.5) and (dims.lat ge loc[1]-dy*0.5),complement=nany)

    iv=reform(mse[*,*,it])
    iv[nanx,*]=!values.f_nan
    iv[*,nany]=!values.f_nan
    mse[*,*,it]=iv

    iv=reform(sh[*,*,it])
    iv[nanx,*]=!values.f_nan
    iv[*,nany]=!values.f_nan
    sh[*,*,it]=iv

    iv=reform(lh[*,*,it])
    iv[nanx,*]=!values.f_nan
    iv[*,nany]=!values.f_nan
    lh[*,*,it]=iv

    iv=reform(netlw[*,*,it])
    iv[nanx,*]=!values.f_nan
    iv[*,nany]=!values.f_nan
    netlw[*,*,it]=iv

    iv=reform(netsw[*,*,it])
    iv[nanx,*]=!values.f_nan
    iv[*,nany]=!values.f_nan
    netsw[*,*,it]=iv

  endfor

;    radius = radius_tc_ll(reform(vloc[*,it]),dims.lon,dims.lat)
;    irad = where(radius le radius_max,complement=nan)
;
;    iv=reform(mse[*,*,it])
;    iv[nan]=!values.f_nan
;    mse[*,*,it]=iv
;
;    iv=reform(netlw[*,*,it])
;    iv[nan]=!values.f_nan
;    netlw[*,*,it]=iv
;
;    iv=reform(netsw[*,*,it])
;    iv[nan]=!values.f_nan
;    netsw[*,*,it]=iv
;
;;    iv=reform(netlwc[*,*,it])
;;    iv[nan]=!values.f_nan
;;    netlwc[*,*,it]=iv
;;
;;    iv=reform(netswc[*,*,it])
;;    iv[nan]=!values.f_nan
;;    netswc[*,*,it]=iv
;
;    iv=reform(lh[*,*,it])
;    iv[nan]=!values.f_nan
;    lh[*,*,it]=iv
;
;    iv=reform(sh[*,*,it])
;    iv[nan]=!values.f_nan
;    sh[*,*,it]=iv
;
;  endfor


;----VARIANCE BUDGET--------------------


  ;RADIATION FROM 2D VARS
;    netlw=lwsfc-lwtoa
;    netsw=swtoa-swsfc

  ;TIME TENDENCY
    ddtmse=mse
    ddtmse[*]=!values.f_nan
    for ix=0,dims.nx-1 do $
    for iy=0,dims.ny-1 do begin
      if n_elements(where(finite(mse[ix,iy,*]))) le 10 then continue
      ddtmse[ix,iy,*] = deriv(reform(mse[ix,iy,*]))
    endfor
    ddtmse/=3600d ; J/kg / m2 / s --> W / m2

  ;ADVECTION AS RESIDUAL
    adv = ddtmse - (netlw + netsw + sh + lh)

  ;ADD LH AND SH
    lh+=sh

  ;REMOVE MEANS

    mse_p    = mse*1d

    ddtmse_p = ddtmse*1d
    netlw_p  = netlw*1d
    netsw_p  = netsw*1d
    lh_p     = lh*1d
;    sh_p     = sh*1d
    adv_p    = adv*1d

;    netlwc_p = netlwc
;    netswc_p = netswc

    for it=0,nttest-1 do begin
      ddtmse_p[*,*,it] -= mean(ddtmse[*,*,it],/nan,/double)
      mse_p[*,*,it]    -= mean(mse[*,*,it],/nan,/double)
      netlw_p[*,*,it]  -= mean(netlw[*,*,it],/nan,/double)
      netsw_p[*,*,it]  -= mean(netsw[*,*,it],/nan,/double)
      lh_p[*,*,it]     -= mean(lh[*,*,it],/nan,/double)
;      sh_p[*,*,it]     -= mean(sh[*,*,it],/nan,/double)
      adv_p[*,*,it]    -= mean(adv[*,*,it],/nan,/double)
;      netlwc_p[*,*,it] -= mean(netlwc[*,*,it],/nan,/double)
;      netswc_p[*,*,it] -= mean(netswc[*,*,it],/nan,/double)
    endfor

  ;VARIANCE

    msevar = mse_p*mse_p

    half_ddtmse_v = mse_p * ddtmse_p
    netlw_v  = mse_p * netlw_p
    netsw_v  = mse_p * netsw_p
    lh_v     = mse_p * lh_p
;    sh_v     = mse_p * sh_p
    adv_v    = mse_p * adv_p
;    netlwc_v = mse_p * netlwc_p
;    netswc_v = mse_p * netswc_p

;fname=dirs.casedir+'post/msevar.nc'
;write_sing_ncvar,fname,msevar,'msevar',dimtag1='lon',dimtag2='lat',dimtag3='time'

  ;SPATIALLY AVERAGE TERMS
    msevar_m=mean(mean(msevar,/double,/nan,dimension=1),/double,/nan,dimension=1)
    half_ddtmse_v_m=mean(mean(half_ddtmse_v,/double,/nan,dimension=1),/double,/nan,dimension=1)
    netlw_v_m=mean(mean(netlw_v,/double,/nan,dimension=1),/double,/nan,dimension=1)
    netsw_v_m=mean(mean(netsw_v,/double,/nan,dimension=1),/double,/nan,dimension=1)
    lh_v_m=mean(mean(lh_v,/double,/nan,dimension=1),/double,/nan,dimension=1)
;    sh_v_m=mean(mean(sh_v,/double,/nan,dimension=1),/double,/nan,dimension=1)
    adv_v_m=mean(mean(adv_v,/double,/nan,dimension=1),/double,/nan,dimension=1)

  ;NORMALIZE BY H'^2 (the variance)
    half_ddtmse_v_m /= msevar_m
    netlw_v_m /= msevar_m
    netsw_v_m /= msevar_m
    lh_v_m /= msevar_m
    ;sh_v_m /= msevar_m
    adv_v_m /= msevar_m

  ;CONVERT FROM /S --> /D
    ddtmse_v_m = half_ddtmse_v_m * 2*3600d*24
;ddtmse_v_m = deriv(msevar_m)/3600.
;ddtmse_v_m /= msevar_m
;print,ddtmse_v_m
    netlw_v_m *= 3600d*24
    netsw_v_m *= 3600d*24
    lh_v_m *= 3600d*24
    ;sh_v_m *= 3600d*24
    sh_v_m=0
    adv_v_m *= 3600d*24

  ;SMOOTH TIME TENDENCY AND ADV
    ddtmse_v_m=smooth(ddtmse_v_m,25,/edge_truncate)
    adv_v_m=smooth(adv_v_m,25,/edge_truncate)

diab = lh_v_m + netsw_v_m + netlw_v_m; + sh_v_m
;ddtmse_v_m=diab

;NORMALIZE FOR 2D MAPS
;for it =0,nttest-1 do begin
;  lh_v[*,*,it] /= msevar_m[it]
;  netlw_v[*,*,it] /= msevar_m[it]
;  netsw_v[*,*,it] /= msevar_m[it]
;endfor
;netlw_v *= 3600d*24
;netsw_v *= 3600d*24
;lh_v *= 3600d*24
;----CREATE PLOTS--------------------


  figdir=dirs.figdir+'/mse_budget/'
  spawn,'mkdir '+figdir,tmp,tmpe

  figname=figdir+dirs.cases[ic]+'_mse_budget'
  wrf_mse_var_budg, figname, ddtmse_v_m, netsw_v_m, netlw_v_m, lh_v_m, sh_v_m, adv_v_m
;  wrf_mse_var_budg, figname, ddtmse_v_m, netsw_v_m, abs(netlw_v_m)/abs(lh_v_m), lh_v_m, sh_v_m, adv_v_m
exit
;  figname=figdir+dirs.cases[ic]+'_mse_var'
;  wrf_mse_var, figname, msevar_m

  figdir=dirs.figdir+'/mse_budget/maps/'
  spawn,'mkdir '+figdir,tmp,tmpe
  figdir+='msevar/'
  spawn,'mkdir '+figdir,tmp,tmpe

stop

  ;MSEVAR
  figname=figdir+dirs.cases[ic]+'_msevar'
  title='MSE Var'
  wrf_mse_var_maps, figname, dims.lon, dims.lat, msevar, title

;.com wrf_mse_var_maps
  ;H'LW'
  figname=figdir+dirs.cases[ic]+'_hplwp'
  title="H'LW'"
  wrf_mse_var_maps, figname, dims.lon, dims.lat, netlw_v, title

  ;H'SEF'
  figname=figdir+dirs.cases[ic]+'_hpsefp'
  title="H'SEF'"
  wrf_mse_var_maps, figname, dims.lon, dims.lat, lh_v, title

endfor ; icase

print,'DONE!!'
end
